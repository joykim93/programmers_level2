## 문제설명
## 프로그래머스 팀에서는 기능 개선 작업을 수행 중입니다. 
## 각 기능은 진도가 100%일 때 서비스에 반영할 수 있습니다.
## 또, 각 기능의 개발속도는 모두 다르기 때문에 뒤에 있는 기능이 앞에 있는 기능보다 먼저 개발될 수 있고, 
## 이때 뒤에 있는 기능은 앞에 있는 기능이 배포될 때 함께 배포됩니다.
## 먼저 배포되어야 하는 순서대로 작업의 진도가 적힌 정수 배열 progresses와 각 작업의 개발 속도가 적힌 정수 배열 speeds가 주어질 때,
## 각 배포마다 몇 개의 기능이 배포되는지를 return 하도록 solution 함수를 완성하세요.

## 입출력 예시
## 1) progresses = [93, 30, 55], speeds = [1, 30, 5], return = [2, 1]
## 2) progresses = [95, 90, 99, 99, 80, 99], speeds = [1, 1, 1, 1, 1, 1], return = [1, 3, 2]

function solution(progresses, speeds) {
  if(progresses.length === 0) return []
  let result = []
  
  // 모든 프로세스가 마무리 될때까지 while문이 실행된다
  while(progresses.length > 0) {
  // 각 프로세스가 100% 이상 될때까지
    while(progresses[0] < 100) {
      for(let i = 0; i < progresses.length; i++) {
        if(!(progresses[i] >= 100)) progresses[i] = progresses[i] + speeds[i]
      }
    }
    
    let cnt = 0
    
    for(let i = 0; i < progresses.length; i++) {
      if(progresses[i] >= 100) {
        cnt++
        } 
        else break;
    }
    
    for(let i = 0; i < cnt; i++) {
      progresses.shift()
      speeds.shift()
    }
    
    result.push(cnt)
    }
 return result
}
